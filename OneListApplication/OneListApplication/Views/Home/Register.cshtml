@model  OneListApplication.Models.RegisteredUserVM

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <ul class="nav nav-pills col-lg-3 col-lg-offset-5">
        <li>@Html.ActionLink("Login", "Login", "Home")</li>
        <li class="active"><a href="#register" aria-controls="register" data-toggle="tab">Register</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="register">
@using (Html.BeginForm("Register", "Home",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "form-signin col-lg-4 col-lg-offset-4" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*<form class="form-signin col-lg-4 col-lg-offset-4">*@
                <img id="profile-img" src="//ssl.gstatic.com/accounts/ui/avatar_2x.png" />
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your name" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                @*<input type="text" class="form-control" placeholder="Your name" required autofocus><br>*@
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email address" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                @*<input type="email" class="form-control" placeholder="Email address" required><br>*@
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Create Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                @*<input type="password" class="form-control" placeholder="Create Password" required><br>*@
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Comfirm Password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            
                @*<input type="password" class="form-control" placeholder="Comfirm Password" required><br>*@
                <button class="btn btn-primary btn-signin" type="submit">Register</button><br />
            @*</form>*@
            }
        </div>
        @*<div class="tab-pane" id="login">
            <form class="form-signin col-lg-4 col-lg-offset-4">
                <img id="profile-img" src="//ssl.gstatic.com/accounts/ui/avatar_2x.png" /><br>
                <input type="email" class="form-control" placeholder="Email address" required autofocus><br>
                <input type="password" class="form-control" placeholder="Password" required>
                <div id="remember" class="checkbox">
                    <label>
                        <input type="checkbox" value="remember-me"> Remember me
                    </label>
                </div>
                <button class="btn btn-primary btn-signin" type="submit">Sign in</button><br />
                <a href="#" class="forgot-password">Forgot the password?</a>
                <a>@Html.ActionLink("Log In as Admin", "Index", "Admin")</a>
            </form>
        </div>*@
        @Html.Raw(ViewBag.FakeConfirmation)
    </div>
</div>